package bytecode

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/stretchr/testify/require"
	"testing"

	"github.com/stretchr/testify/assert"
)

var (
	constructorAbi = `[{"inputs":[{"internalType":"address","name":"sfundSnapshot","type":"address"},{"internalType":"address","name":"liquidity","type":"address"},{"internalType":"address","name":"stakeFarm","type":"address"},{"internalType":"address","name":"operationTreasury","type":"address"},{"internalType":"address","name":"nftTreasury","type":"address"},{"internalType":"address","name":"teamIncentives","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]`
)

func TestDecodeConstructorFromAbi(t *testing.T) {
	tests := []struct {
		name           string
		bytecode       []byte
		constructorAbi string
		want           *Constructor
		wantErr        bool
	}{

		{
			name:           "Test Advanced ABI",
			bytecode:       common.Hex2Bytes("00000000000000000000000038e4adb44ef08f22f5b5b76a8f0c2d0dcbe7dca10000000000000000000000008ebc56a13ae7e3ce27b960b16aa57efed3f4e79e00000000000000000000000000000000000000000000000000000000000007080000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff40000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4e16d0168e52d35cacd2c6185b44281ec28c9dc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec78b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa00000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000080fb784b7ed66730e8b1dbd9820afd29931aab03a31b9172bf52fb401baa1b37639dead5129410f84554091342ccc948c25c76220000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab3f9bf1d81ddb224a2014e98b238638824bcf200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000000bc529c00c6401aef6d220be8c6ea1667f6ad93eec34391362c28ee226b3b8624a699ee507a40fa771fd01d38b03ac7b70998bbe0000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000002fdbadf3c4d5a8666bc06645b8358ab803996e280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000c00e94cb662c3520282e6f5717214004a7f26888b6dbcaeee318e11fe1e87d4af04bdd7b4d6a3f13307225dc7ee72f7c085ab4540000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cffdded873554f362ac02f8fb1f02e5ada10516f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f00000000000000000000000038e4adb44ef08f22f5b5b76a8f0c2d0dcbe7dca186124892ab41173705cd24e05606f34d3d7ae66c6c2c17d4edf2a8f04424ce120000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012d4444f96c644385d8ab355f6ddf801315b625400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6fc33e514e79311fe606801af4b4f343c83a3b72dca711239a516f2103673922d10000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000043ae24960e5534731fc831386c07755a2dc33d47000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000d438f3b5175bebc262bf23753c1e53d03432bde79cf5191e4d4b10cb8a4e1486180f6a1330381ab71e16ac64070116e5c6441b80000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000023bff8ca20aac06efdf23cee3b8ae296a30dfd27000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000009f8f72aa9304c8b593d555f12ef6589cc3a579a2ec76ec3a7e5f010a9229e69fa1945af6f0c6cc5b0a625bf03bd63812221920200000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2adda861f89bbb333c90c492cb837741916a225000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000130000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f984fba01d52a7cd84480d0573725899486a0b5e55c20ff45d6628874349375d16500000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d3d2e2692501a5c9ca623199d38826e513033a170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000004fa0d235c4abf4bcf4787af4cf447de572ef828bebbee9d39fececb0724ab1ef868a1430dbe5c23dd01c88e2707583165338b0d0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088d97d199b9ed37c29d846d00d443de980832a22000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000150000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9de46fbfa339d54cd65b79d8320a7a53c78177565c2aaf4c8b13eed7865e7cfc80000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dfc14d2af169b0d36c4eff567ada9b2e0cae044f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000160000000000000000000000006b175474e89094c44da98b954eedeac495271d0fa5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e5680000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a478c2975ab1ea89e8196811f51a7b7ade33eb110000000000000000000000000000000000000000000000000000000000000000"),
			constructorAbi: `[{"inputs":[{"internalType":"address","name":"cvpToken_","type":"address"},{"internalType":"address","name":"reservoir_","type":"address"},{"internalType":"uint256","name":"anchorPeriod_","type":"uint256"},{"components":[{"internalType":"address","name":"cToken","type":"address"},{"internalType":"address","name":"underlying","type":"address"},{"internalType":"bytes32","name":"symbolHash","type":"bytes32"},{"internalType":"uint256","name":"baseUnit","type":"uint256"},{"internalType":"enum UniswapConfig.PriceSource","name":"priceSource","type":"uint8"},{"internalType":"uint256","name":"fixedPrice","type":"uint256"},{"internalType":"address","name":"uniswapMarket","type":"address"},{"internalType":"bool","name":"isUniswapReversed","type":"bool"}],"internalType":"struct UniswapConfig.TokenConfig[]","name":"configs","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"}]`,
			want: &Constructor{
				Abi:          `[{"inputs":[{"internalType":"address","name":"cvpToken_","type":"address"},{"internalType":"address","name":"reservoir_","type":"address"},{"internalType":"uint256","name":"anchorPeriod_","type":"uint256"},{"components":[{"internalType":"address","name":"cToken","type":"address"},{"internalType":"address","name":"underlying","type":"address"},{"internalType":"bytes32","name":"symbolHash","type":"bytes32"},{"internalType":"uint256","name":"baseUnit","type":"uint256"},{"internalType":"enum UniswapConfig.PriceSource","name":"priceSource","type":"uint8"},{"internalType":"uint256","name":"fixedPrice","type":"uint256"},{"internalType":"address","name":"uniswapMarket","type":"address"},{"internalType":"bool","name":"isUniswapReversed","type":"bool"}],"internalType":"struct UniswapConfig.TokenConfig[]","name":"configs","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"}]`,
				SignatureRaw: "constructor(address cvpToken_, address reservoir_, uint256 anchorPeriod_, (address,address,bytes32,uint256,uint8,uint256,address,bool)[] configs) returns()",
				Arguments: []Argument{
					{Name: "cvpToken_", Type: "address", Value: "0x38e4adB44ef08F22F5B5b76A8f0c2d0dCbE7DcA1", Indexed: false},
					{Name: "reservoir_", Type: "address", Value: "0x8EbC56A13Ae7e3cE27B960b16AA57efed3F4e79E", Indexed: false},
					{Name: "anchorPeriod_", Type: "uint256", Value: "1800", Indexed: false},
					{Name: "configs", Type: "(address,address,bytes32,uint256,uint8,uint256,address,bool)[]", Value: "[{0x0000000000000000000000000000000000000001 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 [170 174 190 186 56 16 177 230 183 7 129 241 75 45 114 193 203 137 192 178 179 32 196 59 182 127 247 159 86 47 95 244] 1000000000000000000 2 0 0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc false} {0x0000000000000000000000000000000000000002 0xdAC17F958D2ee523a2206206994597C13D831ec7 [139 26 29 156 43 16 158 82 124 145 52 178 91 26 24 51 177 107 101 148 249 45 170 159 109 155 122 96 36 188 233 208] 1000000 1 1000000 0x0000000000000000000000000000000000000000 false} {0x0000000000000000000000000000000000000003 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [214 172 161 190 151 41 193 61 103 115 53 22 19 33 100 156 204 174 106 89 21 84 119 37 22 112 15 152 111 148 46 170] 1000000 1 1000000 0x0000000000000000000000000000000000000000 false} {0x000000000000000000000000000000000000000A 0x80fB784B7eD66730e8b1DBd9820aFD29931aab03 [163 27 145 114 191 82 251 64 27 170 27 55 99 157 234 213 18 148 16 248 69 84 9 19 66 204 201 72 194 92 118 34] 1000000000000000000 2 0 0xaB3F9bF1D81ddb224a2014e98B238638824bCf20 false} {0x000000000000000000000000000000000000000b 0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e [236 52 57 19 98 194 142 226 38 179 184 98 74 105 158 229 7 164 15 167 113 253 1 211 139 3 172 123 112 153 139 190] 1000000000000000000 2 0 0x2fDbAdf3C4D5A8666Bc06645B8358ab803996E28 false} {0x000000000000000000000000000000000000000C 0xc00e94Cb662C3520282E6f5717214004A7f26888 [182 219 202 238 227 24 225 31 225 232 125 74 240 75 221 123 77 106 63 19 48 114 37 220 126 231 47 124 8 90 180 84] 1000000000000000000 2 0 0xCFfDdeD873554F362Ac02f8Fb1f02E5ada10516f false} {0x000000000000000000000000000000000000000F 0x38e4adB44ef08F22F5B5b76A8f0c2d0dCbE7DcA1 [134 18 72 146 171 65 23 55 5 205 36 224 86 6 243 77 61 122 230 108 108 44 23 212 237 242 168 240 68 36 206 18] 1000000000000000000 2 0 0x12D4444f96C644385D8ab355F6DDf801315b6254 false} {0x0000000000000000000000000000000000000010 0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F [195 62 81 78 121 49 31 230 6 128 26 244 180 243 67 200 58 59 114 220 167 17 35 154 81 111 33 3 103 57 34 209] 1000000000000000000 2 0 0x43AE24960e5534731Fc831386c07755A2dc33D47 false} {0x0000000000000000000000000000000000000011 0x0d438F3b5175Bebc262bF23753C1E53d03432bDE [121 207 81 145 228 212 177 12 184 164 225 72 97 128 246 161 51 3 129 171 113 225 106 198 64 112 17 110 92 100 65 184] 1000000000000000000 2 0 0x23bFf8ca20AAc06EFDf23cEe3B8ae296A30Dfd27 false} {0x0000000000000000000000000000000000000012 0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2 [236 118 236 58 126 95 1 10 146 41 230 159 161 148 90 246 240 198 204 91 10 98 91 240 59 214 56 18 34 25 32 32] 1000000000000000000 2 0 0xC2aDdA861F89bBB333c90c492cB837741916A225 false} {0x0000000000000000000000000000000000000013 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 [251 160 29 82 167 205 132 72 13 5 115 114 88 153 72 106 11 94 85 194 15 244 93 102 40 135 67 73 55 93 22 80] 1000000000000000000 2 0 0xd3d2E2692501A5c9Ca623199D38826e513033a17 false} {0x0000000000000000000000000000000000000014 0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828 [190 187 238 157 57 254 206 203 7 36 171 30 248 104 161 67 13 190 92 35 221 1 200 142 39 7 88 49 101 51 139 13] 1000000000000000000 2 0 0x88D97d199b9ED37C29D846d00D443De980832a22 false} {0x0000000000000000000000000000000000000015 0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9 [222 70 251 250 51 157 84 205 101 183 157 131 32 167 165 60 120 23 117 101 194 170 244 200 177 62 237 120 101 231 207 200] 1000000000000000000 2 0 0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f false} {0x0000000000000000000000000000000000000016 0x6B175474E89094C44Da98b954EedeAC495271d0F [165 233 47 62 251 104 38 21 95 31 114 142 22 42 249 215 205 163 58 87 74 17 83 181 143 3 234 1 204 55 229 104] 1000000000000000000 2 0 0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11 false}]", Indexed: false}},
			},
		},
		{
			name:           "Test with valid constructor ABI and bytecode",
			bytecode:       []byte("60806040523480156200001157600080fd5b50604051620020b1380380620020b18339818101604052810190620000379190620004b7565b6040518060400160405280601181526020017f53656564696679204e46542053706163650000000000000000000000000000008152506040518060400160405280600581526020017f534e4654530000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620003f0565b508060049080519060200190620000d4929190620003f0565b5050506200011786620000ec6200026460201b60201c565b600a620000fa919062000693565b63b2d05e006200010b9190620007d0565b6200026d60201b60201c565b62000157856200012c6200026460201b60201c565b600a6200013a919062000693565b631dcd65006200014b9190620007d0565b6200026d60201b60201c565b62000198846200016c6200026460201b60201c565b600a6200017a919062000693565b6401dcd650006200018c9190620007d0565b6200026d60201b60201c565b620001d883620001ad6200026460201b60201c565b600a620001bb919062000693565b63ee6b2800620001cc9190620007d0565b6200026d60201b60201c565b6200021882620001ed6200026460201b60201c565b600a620001fb919062000693565b63b2d05e006200020c9190620007d0565b6200026d60201b60201c565b62000258816200022d6200026460201b60201c565b600a6200023b919062000693565b6359682f006200024c9190620007d0565b6200026d60201b60201c565b50505050505062000965565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002d7906200058b565b60405180910390fd5b620002f460008383620003e660201b60201c565b8060026000828254620003089190620005db565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200035f9190620005db565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003c69190620005ad565b60405180910390a3620003e260008383620003eb60201b60201c565b5050565b505050565b505050565b828054620003fe906200087c565b90600052602060002090601f0160209004810192826200042257600085556200046e565b82601f106200043d57805160ff19168380011785556200046e565b828001600101855582156200046e579182015b828111156200046d57825182559160200191906001019062000450565b5b5090506200047d919062000481565b5090565b5b808211156200049c57600081600090555060010162000482565b5090565b600081519050620004b1816200094b565b92915050565b60008060008060008060c08789031215620004d757620004d662000910565b5b6000620004e789828a01620004a0565b9650506020620004fa89828a01620004a0565b95505060406200050d89828a01620004a0565b94505060606200052089828a01620004a0565b93505060806200053389828a01620004a0565b92505060a06200054689828a01620004a0565b9150509295509295509295565b600062000562601f83620005ca565b91506200056f8262000922565b602082019050919050565b620005858162000865565b82525050565b60006020820190508181036000830152620005a68162000553565b9050919050565b6000602082019050620005c460008301846200057a565b92915050565b600082825260208201905092915050565b6000620005e88262000865565b9150620005f58362000865565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200062d576200062c620008b2565b5b828201905092915050565b6000808291508390505b60018511156200068a57808604811115620006625762000661620008b2565b5b6001851615620006725780820291505b8081029050620006828562000915565b945062000642565b94509492505050565b6000620006a08262000865565b9150620006ad836200086f565b9250620006dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620006e4565b905092915050565b600082620006f65760019050620007c9565b81620007065760009050620007c9565b81600181146200071f57600281146200072a5762000760565b6001915050620007c9565b60ff8411156200073f576200073e620008b2565b5b8360020a915084821115620007595762000758620008b2565b5b50620007c9565b5060208310610133831016604e8410600b84101617156200079a5782820a905083811115620007945762000793620008b2565b5b620007c9565b620007a9848484600162000638565b92509050818404811115620007c357620007c2620008b2565b5b81810290505b9392505050565b6000620007dd8262000865565b9150620007ea8362000865565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620008265762000825620008b2565b5b828202905092915050565b60006200083e8262000845565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600060028204905060018216806200089557607f821691505b60208210811415620008ac57620008ab620008e1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620009568162000831565b81146200096257600080fd5b50565b61173c80620009756000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b4114610226578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806342966c68146101be57806370a08231146101da57806379cc67901461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e991906110eb565b60405180910390f35b61010c60048036038101906101079190610ec2565b610366565b60405161011991906110d0565b60405180910390f35b61012a610389565b604051610137919061122d565b60405180910390f35b61015a60048036038101906101559190610e6f565b610393565b60405161016791906110d0565b60405180910390f35b6101786103c2565b6040516101859190611248565b60405180910390f35b6101a860048036038101906101a39190610ec2565b6103cb565b6040516101b591906110d0565b60405180910390f35b6101d860048036038101906101d39190610f02565b610475565b005b6101f460048036038101906101ef9190610e02565b610489565b604051610201919061122d565b60405180910390f35b610224600480360381019061021f9190610ec2565b6104d1565b005b61022e6104f1565b60405161023b91906110eb565b60405180910390f35b61025e60048036038101906102599190610ec2565b610583565b60405161026b91906110d0565b60405180910390f35b61028e60048036038101906102899190610ec2565b61066d565b60405161029b91906110d0565b60405180910390f35b6102be60048036038101906102b99190610e2f565b610690565b6040516102cb919061122d565b60405180910390f35b6060600380546102e390611391565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611391565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600080610371610717565b905061037e81858561071f565b600191505092915050565b6000600254905090565b60008061039e610717565b90506103ab8582856108ea565b6103b6858585610976565b60019150509392505050565b60006012905090565b6000806103d6610717565b905061046a818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610465919061127f565b61071f565b600191505092915050565b610486610480610717565b82610bf7565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104e3826104dd610717565b836108ea565b6104ed8282610bf7565b5050565b60606004805461050090611391565b80601f016020809104026020016040519081016040528092919081815260200182805461052c90611391565b80156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b5050505050905090565b60008061058e610717565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064b9061120d565b60405180910390fd5b610661828686840361071f565b60019250505092915050565b600080610678610717565b9050610685818585610976565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561078f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610786906111ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f69061114d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108dd919061122d565b60405180910390a3505050565b60006108f68484610690565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109705781811015610962576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109599061116d565b60405180910390fd5b61096f848484840361071f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dd906111cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d9061110d565b60405180910390fd5b610a61838383610dce565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ae7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ade9061118d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b7a919061127f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bde919061122d565b60405180910390a3610bf1848484610dd3565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5e906111ad565b60405180910390fd5b610c7382600083610dce565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf09061112d565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610d5091906112d5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610db5919061122d565b60405180910390a3610dc983600084610dd3565b505050565b505050565b505050565b600081359050610de7816116d8565b92915050565b600081359050610dfc816116ef565b92915050565b600060208284031215610e1857610e17611421565b5b6000610e2684828501610dd8565b91505092915050565b60008060408385031215610e4657610e45611421565b5b6000610e5485828601610dd8565b9250506020610e6585828601610dd8565b9150509250929050565b600080600060608486031215610e8857610e87611421565b5b6000610e9686828701610dd8565b9350506020610ea786828701610dd8565b9250506040610eb886828701610ded565b9150509250925092565b60008060408385031215610ed957610ed8611421565b5b6000610ee785828601610dd8565b9250506020610ef885828601610ded565b9150509250929050565b600060208284031215610f1857610f17611421565b5b6000610f2684828501610ded565b91505092915050565b610f388161131b565b82525050565b6000610f4982611263565b610f53818561126e565b9350610f6381856020860161135e565b610f6c81611426565b840191505092915050565b6000610f8460238361126e565b9150610f8f82611437565b604082019050919050565b6000610fa760228361126e565b9150610fb282611486565b604082019050919050565b6000610fca60228361126e565b9150610fd5826114d5565b604082019050919050565b6000610fed601d8361126e565b9150610ff882611524565b602082019050919050565b600061101060268361126e565b915061101b8261154d565b604082019050919050565b600061103360218361126e565b915061103e8261159c565b604082019050919050565b600061105660258361126e565b9150611061826115eb565b604082019050919050565b600061107960248361126e565b91506110848261163a565b604082019050919050565b600061109c60258361126e565b91506110a782611689565b604082019050919050565b6110bb81611347565b82525050565b6110ca81611351565b82525050565b60006020820190506110e56000830184610f2f565b92915050565b600060208201905081810360008301526111058184610f3e565b905092915050565b6000602082019050818103600083015261112681610f77565b9050919050565b6000602082019050818103600083015261114681610f9a565b9050919050565b6000602082019050818103600083015261116681610fbd565b9050919050565b6000602082019050818103600083015261118681610fe0565b9050919050565b600060208201905081810360008301526111a681611003565b9050919050565b600060208201905081810360008301526111c681611026565b9050919050565b600060208201905081810360008301526111e681611049565b9050919050565b600060208201905081810360008301526112068161106c565b9050919050565b600060208201905081810360008301526112268161108f565b9050919050565b600060208201905061124260008301846110b2565b92915050565b600060208201905061125d60008301846110c1565b92915050565b600081519050919050565b600082825260208201905092915050565b600061128a82611347565b915061129583611347565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112ca576112c96113c3565b5b828201905092915050565b60006112e082611347565b91506112eb83611347565b9250828210156112fe576112fd6113c3565b5b828203905092915050565b600061131482611327565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561137c578082015181840152602081019050611361565b8381111561138b576000848401525b50505050565b600060028204905060018216806113a957607f821691505b602082108114156113bd576113bc6113f2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6116e181611309565b81146116ec57600080fd5b50565b6116f881611347565b811461170357600080fd5b5056fea264697066735822122048465ffdde5e18d4f61dd9195bc1588bbbe831cec4865b3f47997aae6de4ec1464736f6c63430008070033000000000000000000000000cc0a8c00b3edbb00e6719106828e94e533a8cf35000000000000000000000000c14cb184ed31e238da7a9040f664cfe37d9034b50000000000000000000000002765e88c4f4d84cc3b32c544ef474f38c5b86c5a0000000000000000000000009224ceded81e892beae74d6951a6bae54954ceea000000000000000000000000f102173e4c3230dde40d5df53acc215e2aa7c88300000000000000000000000056d850644f274cf7c9cb28eff7952b66b008c700"),
			constructorAbi: constructorAbi,
			want: &Constructor{
				Abi:          constructorAbi,
				SignatureRaw: "constructor(address sfundSnapshot, address liquidity, address stakeFarm, address operationTreasury, address nftTreasury, address teamIncentives) returns()",
				Arguments: []Argument{
					{
						Name:    "sfundSnapshot",
						Type:    "address",
						Value:   "0x3830313536323030303031313537363030303830",
						Indexed: false,
					},
					{
						Name:    "liquidity",
						Type:    "address",
						Value:   "0x3632303032306231333830333830363230303230",
						Indexed: false,
					},
					{
						Name:    "stakeFarm",
						Type:    "address",
						Value:   "0x3630343035323831303139303632303030303337",
						Indexed: false,
					},
					{
						Name:    "operationTreasury",
						Type:    "address",
						Value:   "0x3536356236303430353138303630343030313630",
						Indexed: false,
					},
					{
						Name:    "nftTreasury",
						Type:    "address",
						Value:   "0x3532363032303031376635333635363536343639",
						Indexed: false,
					},
					{
						Name:    "teamIncentives",
						Type:    "address",
						Value:   "0x3230353337303631363336353030303030303030",
						Indexed: false,
					},
				},
			},
			wantErr: false,
		},
		{
			name:           "Abi parser error",
			bytecode:       []byte{},
			constructorAbi: "Fuu",
			wantErr:        true,
		},
		{
			name:           "Abi unpack values error capture",
			bytecode:       []byte{0x01, 0x02, 0x03, 0x04, 0x05},
			constructorAbi: "{}",
			wantErr:        true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := DecodeConstructorFromAbi(tt.bytecode, tt.constructorAbi)
			if tt.wantErr {
				assert.Error(t, err)
			} else {
				assert.NoError(t, err)
				require.NotNil(t, got)
				assert.Equal(t, tt.want.Abi, got.Abi)
				assert.Equal(t, tt.want.SignatureRaw, got.SignatureRaw)
				assert.Equal(t, tt.want.Arguments, got.Arguments)
				assert.NotNil(t, got.Parsed)
				assert.NotNil(t, got.UnpackedArguments)
				packed, err := got.Pack()
				assert.NoError(t, err)
				assert.NotNil(t, packed)
			}
		})
	}
}
